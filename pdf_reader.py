# -*- coding: utf-8 -*-
"""PDF_Reader.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1jS4A3QL8J2sdiQXv1agaIN3uOwETFyv2

# **Installing Dependencies**
"""

!pip install langchain
!pip install langchain_community
!pip install openai
!pip install PyPDF2
!pip install faiss-cpu
!pip install tiktoken

"""**Importing the necessary Libraries**"""

from PyPDF2 import PdfReader
from langchain.embeddings.openai import OpenAIEmbeddings
from langchain.text_splitter import CharacterTextSplitter
from langchain.vectorstores import FAISS

"""Importinng the OS and setting up the environment with the OpenAI API Key"""

import os
os.environ['OPENAI_API_KEY'] = "<API KEY>"

"""Reading the PDF file"""

pdfreader = PdfReader("file_name.pdf")

"""Extracting the words present in the PDF and storing it into RAW_File"""

from typing_extensions import Concatenate

raw_text = ''

for i, page in enumerate(pdfreader.pages):
  content =  page.extract_text()
  if content:
    raw_text += content

"""Displaying the Raw File"""

raw_text

"""Splitting the text from characters into chunks"""

text_splitter = CharacterTextSplitter(
    separator = '\n',
    chunk_size = 100,
    chunk_overlap = 30,
    length_function = len,
)
texts = text_splitter.split_text(raw_text)

len(texts)

!pip install langchain-openai

"""Embedd the chunks into vectors"""

embeddings = OpenAIEmbeddings()

"""Search from FAISS - Facebook AI Similarity Search and embedd the text and chunks into FAISS"""

document_search = FAISS.from_texts(texts,embeddings)

from langchain.chains.question_answering import load_qa_chain
from langchain.llms import OpenAI

"""Stuff the embedded data or vectors into OPEN AI LLM"""

chain = load_qa_chain(OpenAI(),chain_type="stuff")

"""Ask Questions to the PDF Reader"""

query = input()
docs = document_search.similarity_search(query)
chain.run(input_documents=docs, question=query)